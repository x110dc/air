user stories remaining to be implemented:

- finish review - mark it as closed, reintegrate it, delete branch

completed user stories:

- list tickets @done
- given a brief description, create a bug in Jira @done
- given a ticket, create a branch in svn for it @done
- refresh a branch from trunk @done
- "start" an issue: create branch, start progress, add Svn URL to Jira @done
- self-assign ("take"): assign a ticket to me @done
- add a comment to a ticket @done
- "finish" a ticket - mark ticket as ready for review, update CHANGES @done
- given a brief description, create a task in Jira @done
- add watcher to ticket @done
- list tickets ready for review @done
- close ticket @done
- assign a ticket @done
- start a review - mark ticket as 'in review', create Crucible review @done
- review: reject ticket @done

TODO:

- bash completions
- command to create sample (commented) config
- allow adding (another) patch/diff to an existing review
- task: delete a branch: both Svn and Git?
- test lack of [jira] section in config
- test lack of [crucible] section in config
- test finishing work by getting ticket from dir
- test taking ticket
- test refreshing by getting ticket from dir
- test closing ticket by getting ticket from dir
- test _complete methods
- test lack of jql in config
- test jira assign_issue method
- should finish do something to/with CHANGES?
- test lack of filterdiff (diff output has info about properties)
- tests for closing issues that are in different states
- clean up SVN test repos via tearDown?
- urllib2 quote the URL before posting to Jira
- having an alias that points to something non-existent fails to produce an error
- pull parts of Commands into Subversion library (too much direct SVN access)
- on 'start_work' if issue isn't assigned to me, assign it to me
- tests for getting ticket from "svn info" or "git svn info"
- tests for exceptional conditions (bad Svn, etc)
- construct branch and trunk URLs from root url if not specified?
- Crucible integration
- logging?
- what to do if config file doesn't exist?
- check that aliases are valid
- do more formal doc strings with params and return values
- allow use of favorite filters and tab-complete their names?
- write a README
- check config file
- create Sphinx (or similar) docs
- support for Git
- use default Component for creating issues
- install tab completions as part of setup.py?
- cache completions?
- better completions for tickets
- use Google SSO token instead of plaintext password? LDAP?
- a task to run tests and post the names of any failing tests to Jira?
- check task: do a clean checkout and run tests?
- task: log time spent on issue?
- task: log time on issue automatically?
- use argh package to simplify command line option handling?

Known Issues:
- completion values are cached only once and then reused so they can become out
  of date -- this likely is only a minor problem for persons and commands, but
  a bigger issue for tickets

caveats:
- uses same text for summary and description of new Jira issues

Done:
- test coverage @done
- pass config object around instead of reading at the module level? @done
- same for Jira object? @done
- think of a good name (2 or 3 character) @done
- use .coveragerc to exclude tests from test coverage @done
- more tests! @done
- test aliases @done
- start an issue (create branch, start progress, add SVN URL to Jira) @done
- better handling of output vs. print? @done
- remove __init__ from list of subcommand options @done
- split apart into packages/libraries/modules @done
- make package installable @done
- have config file in current dir override $HOME one @done
- add comment to a ticket @done
- do completion on -t (tickets) @done
- allow 'refresh' (and others?) to deduce ticket from PWD (Svn or Git?) @done
- zsh completions @done
- post a comment to the Jira issue when doing a refresh on a branch @done
- self-assign (take) @done
- use tearDown to close bugs I've created through testing? @done
- why aren't MMSANDBOX issues assigned to me showing up in the list? @done
- use filters already in Jira account too or instead of hardcoded one? @done
- put JQL filters in config file? @done
- require that at least one .air.cfg file be present @done
- add completion for Jira person assignments and watchers @done
- doesn't work with multiple SVN repos at the same time [now it does] @done
- doesn't work with multiple Jira projects or users at the same time [now it does] @done
- create tasks in Jira (not just bugs) @done
- use git-flow for inspiration? @done
- make sure multiple --person opts can be specified for a review @done
- what happens if no reviewers are specified? @done
- do the approveReview part  @done
- option to inhibit opening review in browser @done
